type Query {
  post(query: String): [Post!]!
  user: [User!]!
  greeting(name: String): String!
  add(a: Float!, b: Float!): Float!
  add1(arr: [Float!]!): Float!
  grades: [Int!]!
  comment: [Comment!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createPost(data: CreatePostInput!): Post!
  createComment(data: CreateCommentInput!): Comment!
  deleteUser(id: ID!): User!
  deletePost(id: ID!): Post!
  deleteComment(id: ID!): Comment!
}

input CreateUserInput {
  name: String!
  email: String!
  age: Int
}
input CreatePostInput {
  title: String!
  body: String
  author: ID!
}
input CreateCommentInput {
  text: String!
  author: ID!
  post: ID!
}

type User {
  id: ID!
  name: String!
  age: Int
  posts: [Post!]!
  comments: [Comment!]!
}
type Post {
  id: ID!
  title: String
  body: String!
  author: User!
  comments: [Comment!]!
}
type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}


